using System;
using SD = System.Drawing;

using Rhino.Geometry;

using Grasshopper.Kernel;
using GH_IO.Serialization;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin.GH
{
  public sealed class ProjectComponentCTX_2748635b : ProjectComponent_Base, IGH_ContextualComponent
  {
    static readonly string s_scriptData = "";
    static readonly string s_scriptIconData = "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAAbJJREFUSEvF1UkoRVEcx/EbMmcqGUpkJ4pSiizYGtZYECkLWbOzsZBpQSxISShLG0OKkilDkTIkQ6RIQuYhw/fnvrd/7nnxq0/v3613pnvuOdZ/ZRgBdulx9B+P44t1u7T8cINolKAVyh3i7dKawW8HZAVhAtn4QjfOXXUt1EEbRhAFRynFMWrwiQ0M4ANZeEcjHCcMe3b501g9CqBZ+GAQkTBKL1LxhHmM4hX5mIRxCqGGy/ECjb4Y+yiDcdLwbJdWB6bs0rpHhl2aRWusUWfiFnoXudBs4mCcQJzhGkuYxgM2EQKvZBGaRSWqXHU7QuGVnEKNdmIM+ibG4ZUO/KFt2QetvxpvwSW8skQ6gzR6ZRnN0EemZ+6zyCjJ0BI1QI1eQF/0KlJgnCKkQ433YBdvUMcVMI6OCh3f6kBfcxOuoGjLGkUvUXeBtuYJNHp9E5pBItYQDsfROdQFjT4Wh1iBLh3toiFUw1GCoRHnQR0kQEtzAJ1PehaDI0TgV9GaL+ARurm07u7jehs6NjSDHeg9zEL/8Th10B2rQ21LD4jWPge6l+eQBG1Z913c7/r9y1jWNynQb2p58NRsAAAAAElFTkSuQmCC";

    public override Guid ComponentGuid { get; } = new Guid("2748635b-6c54-414e-a4f2-e3b868c2fd81");

    public override GH_Exposure Exposure { get; } = GH_Exposure.primary;

    public override bool Obsolete { get; } = false;

    public ProjectComponentCTX_2748635b() : base(s_scriptData, s_scriptIconData,
        name: "Compute_Diagrid.gh",
        nickname: "cmp_dgd",
        description: "Given a 2D cross section parameters and a 3D shape description, computes a 3D diagrid curve network.",
        category: "Lattic3",
        subCategory: "Compute"
        )
    {
    }

    protected override void RegisterInputParams(GH_InputParamManager _) { }
    protected override void RegisterOutputParams(GH_OutputParamManager _) { }

    protected override void BeforeSolveInstance() => m_script.BeforeSolve(this);

    protected override void SolveInstance(IGH_DataAccess DA) => m_script.Solve(this, DA);

    protected override void AfterSolveInstance() => m_script.AfterSolve(this);

    public override BoundingBox ClippingBox => m_script.GetClipBox(this);

    public override void DrawViewportWires(IGH_PreviewArgs args) => m_script.DrawWires(this, args);

    public override void DrawViewportMeshes(IGH_PreviewArgs args) => m_script.DrawMeshes(this, args);

    #region IGH_ContextualComponent
    GH_Archive IGH_ContextualComponent.Archive => m_script.Archive;
    #endregion
  }
}
