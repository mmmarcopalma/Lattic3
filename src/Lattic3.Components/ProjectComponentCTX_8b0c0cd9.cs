using System;
using SD = System.Drawing;

using Rhino.Geometry;

using Grasshopper.Kernel;
using GH_IO.Serialization;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin.GH
{
  public sealed class ProjectComponentCTX_8b0c0cd9 : ProjectComponent_Base, IGH_ContextualComponent
  {
    static readonly string s_scriptData = "";
    static readonly string s_scriptIconData = "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAAYFJREFUSEvNlLsuRUEUhrdLwnEJoThxSUSlUGklNJw3UEkUKq2CRqMVD6CgoPEACnSi4gFEJVEJicalQRT836w9CWffzt628CVfrDVz5mLtmQn+G+NyxMLyGZUfoUM0lE2/9At00/AbdMoOC4vTKpsszA1jU6G2b/JG1i9C3i4rspmGOrbku1x3WQLzkhqziN8Nky3IV+m/AfGS/Lrja0nfqctSYBF/StjxnXyWG7IauiYf5a3sksBiixY2BiU5l5QrDvovJIvElSwTLhQ17XVZMpRzwsJ87MgrC1M5k0cW5uNE7luYyop8sTAfxzLzRIhdybfIZEo+yAOXBcGsJM/iXi5b6MYyhrkibEp/zltkWxhvyyT8GC4fx9SPpz0CP5iTgy4zeJ4ZcOiy7+xJ+qZdZgxL5mCDDcMz/SQ5jvzlghFzhMdkKXCRuLEzoX1h24/hX027aDzdPRYW41JS51WXRaFk9BdehCPIBDzFcfAd6KdkhaDONQtjGZCTFv4JQfAJ6i5KNNzxHJMAAAAASUVORK5CYII=";

    public override Guid ComponentGuid { get; } = new Guid("8b0c0cd9-dc6b-4544-b7cd-2c61f63c799b");

    public override GH_Exposure Exposure { get; } = GH_Exposure.primary;

    public override bool Obsolete { get; } = false;

    public ProjectComponentCTX_8b0c0cd9() : base(s_scriptData, s_scriptIconData,
        name: "Compute_Section",
        nickname: "cmp_sec",
        description: "Given cross section parameters and material reduction coefficient, computes a 2D atomized section description. ",
        category: "Lattic3",
        subCategory: "Compute"
        )
    {
    }

    protected override void RegisterInputParams(GH_InputParamManager _) { }
    protected override void RegisterOutputParams(GH_OutputParamManager _) { }

    protected override void BeforeSolveInstance() => m_script.BeforeSolve(this);

    protected override void SolveInstance(IGH_DataAccess DA) => m_script.Solve(this, DA);

    protected override void AfterSolveInstance() => m_script.AfterSolve(this);

    public override BoundingBox ClippingBox => m_script.GetClipBox(this);

    public override void DrawViewportWires(IGH_PreviewArgs args) => m_script.DrawWires(this, args);

    public override void DrawViewportMeshes(IGH_PreviewArgs args) => m_script.DrawMeshes(this, args);

    #region IGH_ContextualComponent
    GH_Archive IGH_ContextualComponent.Archive => m_script.Archive;
    #endregion
  }
}
