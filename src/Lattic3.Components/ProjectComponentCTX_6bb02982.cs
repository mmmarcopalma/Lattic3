using System;
using SD = System.Drawing;

using Rhino.Geometry;

using Grasshopper.Kernel;
using GH_IO.Serialization;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin.GH
{
  public sealed class ProjectComponentCTX_6bb02982 : ProjectComponent_Base, IGH_ContextualComponent
  {
    static readonly string s_scriptData = "";
    static readonly string s_scriptIconData = "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAAfBJREFUSEvFlcsrRHEUx0eeK/N+jxmmyWI2pDRWNrJgYWEpG3lkbWVjp6wsiGxssZGFUrIgirz+ACYrjYVEQolG43PMcVND3bkjvvXtnO+593x/v/t7zNj+DdFo1Onz+Sbgjt/vTxOfvpLaBXEXTkUiEZe2mUMikajG4BVOwhQmcZfLVfuV1OuptxHH4VssFqvRdlMop/mZxnviKZwjHyQOCTWX2gHxhpilpzLfah5lNKa9Xu8acSAQCMxiNiMklzhMfRo+8G5FvqVIhEIhN0bPKgvAs9tgMBhVaQ2YrMMxlQao9cgXqrQOlqgJsyOVBqhts1RdKq2D0+HA7EmlAWafcbvdIZWlgZnmNDXAADk5zipLA18gFy2u8gMygKalA/MT2KFSTlcj+lJl6WC2+x6Pp13l7w+AWcESfbcvlvHDJmeL/f35FnKbMXtUaYBahmd1Kq3jp4vGAFt8WbdK68B8A46oNECtg0GuVFoDJyeIUcEt/gTPrhmkXmVxSCaTVTSnZSngPGbH8FB5BBepL8NHp9Np1zbTKKfxBZNLuEo+CFNsarNQ9oX17+fZLPUzmLPb7Q7tNYUKmu/gJuzDrBWTBvK4UHKWr4W8k3wBZsPhcER7zQPjXpqXMJI//nMosxVKvkd9BY7yalW+489hs70DWLd5Dcyzg8oAAAAASUVORK5CYII=";

    public override Guid ComponentGuid { get; } = new Guid("6bb02982-1e83-43d7-b610-a776677d1d69");

    public override GH_Exposure Exposure { get; } = GH_Exposure.primary;

    public override bool Obsolete { get; } = false;

    public ProjectComponentCTX_6bb02982() : base(s_scriptData, s_scriptIconData,
        name: "Compute_Shape",
        nickname: "cmp_shp",
        description: "Given a 3D shape type (Constant, Linear, or Parabolic) and related parameters, computes a 3D shape description.",
        category: "Lattic3",
        subCategory: "Compute"
        )
    {
    }

    protected override void RegisterInputParams(GH_InputParamManager _) { }
    protected override void RegisterOutputParams(GH_OutputParamManager _) { }

    protected override void BeforeSolveInstance() => m_script.BeforeSolve(this);

    protected override void SolveInstance(IGH_DataAccess DA) => m_script.Solve(this, DA);

    protected override void AfterSolveInstance() => m_script.AfterSolve(this);

    public override BoundingBox ClippingBox => m_script.GetClipBox(this);

    public override void DrawViewportWires(IGH_PreviewArgs args) => m_script.DrawWires(this, args);

    public override void DrawViewportMeshes(IGH_PreviewArgs args) => m_script.DrawMeshes(this, args);

    #region IGH_ContextualComponent
    GH_Archive IGH_ContextualComponent.Archive => m_script.Archive;
    #endregion
  }
}
